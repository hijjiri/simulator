// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.32.0-devel
// 	protoc        v3.12.4
// source: hero.proto

package hero

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type HeroData_Lock int32

const (
	HeroData_NONE  HeroData_Lock = 0
	HeroData_ADMIN HeroData_Lock = 1
	HeroData_DECK  HeroData_Lock = 2
	HeroData_TRADE HeroData_Lock = 3
)

// Enum value maps for HeroData_Lock.
var (
	HeroData_Lock_name = map[int32]string{
		0: "NONE",
		1: "ADMIN",
		2: "DECK",
		3: "TRADE",
	}
	HeroData_Lock_value = map[string]int32{
		"NONE":  0,
		"ADMIN": 1,
		"DECK":  2,
		"TRADE": 3,
	}
)

func (x HeroData_Lock) Enum() *HeroData_Lock {
	p := new(HeroData_Lock)
	*p = x
	return p
}

func (x HeroData_Lock) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (HeroData_Lock) Descriptor() protoreflect.EnumDescriptor {
	return file_hero_proto_enumTypes[0].Descriptor()
}

func (HeroData_Lock) Type() protoreflect.EnumType {
	return &file_hero_proto_enumTypes[0]
}

func (x HeroData_Lock) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use HeroData_Lock.Descriptor instead.
func (HeroData_Lock) EnumDescriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{2, 0}
}

type HeroTypeMaster struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroType       uint32   `protobuf:"varint,1,opt,name=hero_type,json=heroType,proto3" json:"hero_type,omitempty"`
	Asset          bool     `protobuf:"varint,2,opt,name=asset,proto3" json:"asset,omitempty"`
	Rarity         int32    `protobuf:"varint,3,opt,name=rarity,proto3" json:"rarity,omitempty"`
	Supply         int32    `protobuf:"varint,4,opt,name=supply,proto3" json:"supply,omitempty"`
	Param          *Param   `protobuf:"bytes,5,opt,name=param,proto3" json:"param,omitempty"`
	Trend          *Param   `protobuf:"bytes,6,opt,name=trend,proto3" json:"trend,omitempty"`
	Active         uint32   `protobuf:"varint,7,opt,name=active,proto3" json:"active,omitempty"` // deprecated
	Passive        uint32   `protobuf:"varint,8,opt,name=passive,proto3" json:"passive,omitempty"`
	Name           string   `protobuf:"bytes,9,opt,name=name,proto3" json:"name,omitempty"`
	Attribute      []string `protobuf:"bytes,16,rep,name=attribute,proto3" json:"attribute,omitempty"` // deprecated
	AttributeTypes []uint32 `protobuf:"varint,17,rep,packed,name=attribute_types,json=attributeTypes,proto3" json:"attribute_types,omitempty"`
	PassiveV2      []uint32 `protobuf:"varint,18,rep,packed,name=passive_v2,json=passiveV2,proto3" json:"passive_v2,omitempty"`
}

func (x *HeroTypeMaster) Reset() {
	*x = HeroTypeMaster{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hero_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroTypeMaster) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroTypeMaster) ProtoMessage() {}

func (x *HeroTypeMaster) ProtoReflect() protoreflect.Message {
	mi := &file_hero_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroTypeMaster.ProtoReflect.Descriptor instead.
func (*HeroTypeMaster) Descriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{0}
}

func (x *HeroTypeMaster) GetHeroType() uint32 {
	if x != nil {
		return x.HeroType
	}
	return 0
}

func (x *HeroTypeMaster) GetAsset() bool {
	if x != nil {
		return x.Asset
	}
	return false
}

func (x *HeroTypeMaster) GetRarity() int32 {
	if x != nil {
		return x.Rarity
	}
	return 0
}

func (x *HeroTypeMaster) GetSupply() int32 {
	if x != nil {
		return x.Supply
	}
	return 0
}

func (x *HeroTypeMaster) GetParam() *Param {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *HeroTypeMaster) GetTrend() *Param {
	if x != nil {
		return x.Trend
	}
	return nil
}

func (x *HeroTypeMaster) GetActive() uint32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *HeroTypeMaster) GetPassive() uint32 {
	if x != nil {
		return x.Passive
	}
	return 0
}

func (x *HeroTypeMaster) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *HeroTypeMaster) GetAttribute() []string {
	if x != nil {
		return x.Attribute
	}
	return nil
}

func (x *HeroTypeMaster) GetAttributeTypes() []uint32 {
	if x != nil {
		return x.AttributeTypes
	}
	return nil
}

func (x *HeroTypeMaster) GetPassiveV2() []uint32 {
	if x != nil {
		return x.PassiveV2
	}
	return nil
}

type Param struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Hp  int32 `protobuf:"varint,1,opt,name=hp,proto3" json:"hp,omitempty"`
	Phy int32 `protobuf:"varint,2,opt,name=phy,proto3" json:"phy,omitempty"`
	Int int32 `protobuf:"varint,3,opt,name=int,proto3" json:"int,omitempty"`
	Agi int32 `protobuf:"varint,4,opt,name=agi,proto3" json:"agi,omitempty"`
}

func (x *Param) Reset() {
	*x = Param{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hero_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Param) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Param) ProtoMessage() {}

func (x *Param) ProtoReflect() protoreflect.Message {
	mi := &file_hero_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Param.ProtoReflect.Descriptor instead.
func (*Param) Descriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{1}
}

func (x *Param) GetHp() int32 {
	if x != nil {
		return x.Hp
	}
	return 0
}

func (x *Param) GetPhy() int32 {
	if x != nil {
		return x.Phy
	}
	return 0
}

func (x *Param) GetInt() int32 {
	if x != nil {
		return x.Int
	}
	return 0
}

func (x *Param) GetAgi() int32 {
	if x != nil {
		return x.Agi
	}
	return 0
}

type HeroData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	HeroId          uint32                  `protobuf:"varint,1,opt,name=hero_id,json=heroId,proto3" json:"hero_id,omitempty"`
	HeroType        uint32                  `protobuf:"varint,2,opt,name=hero_type,json=heroType,proto3" json:"hero_type,omitempty"`
	Param           *Param                  `protobuf:"bytes,3,opt,name=param,proto3" json:"param,omitempty"`
	Trend           *Param                  `protobuf:"bytes,4,opt,name=trend,proto3" json:"trend,omitempty"`
	Active          uint32                  `protobuf:"varint,5,opt,name=active,proto3" json:"active,omitempty"`
	Passive         uint32                  `protobuf:"varint,6,opt,name=passive,proto3" json:"passive,omitempty"`
	Lock            HeroData_Lock           `protobuf:"varint,7,opt,name=lock,proto3,enum=hero.HeroData_Lock" json:"lock,omitempty"`
	StockedSkillIds []uint32                `protobuf:"varint,8,rep,packed,name=stocked_skill_ids,json=stockedSkillIds,proto3" json:"stocked_skill_ids,omitempty"`
	AttributeTypes  []uint32                `protobuf:"varint,9,rep,packed,name=attribute_types,json=attributeTypes,proto3" json:"attribute_types,omitempty"`
	LockUntil       int64                   `protobuf:"varint,10,opt,name=lock_until,json=lockUntil,proto3" json:"lock_until,omitempty"`
	Skills          []uint32                `protobuf:"varint,11,rep,packed,name=skills,proto3" json:"skills,omitempty"`
	ActiveSkill     uint32                  `protobuf:"varint,12,opt,name=active_skill,json=activeSkill,proto3" json:"active_skill,omitempty"`
	V2SkillInfos    map[uint32]*V2SkillInfo `protobuf:"bytes,13,rep,name=v2_skill_infos,json=v2SkillInfos,proto3" json:"v2_skill_infos,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *HeroData) Reset() {
	*x = HeroData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hero_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HeroData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeroData) ProtoMessage() {}

func (x *HeroData) ProtoReflect() protoreflect.Message {
	mi := &file_hero_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeroData.ProtoReflect.Descriptor instead.
func (*HeroData) Descriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{2}
}

func (x *HeroData) GetHeroId() uint32 {
	if x != nil {
		return x.HeroId
	}
	return 0
}

func (x *HeroData) GetHeroType() uint32 {
	if x != nil {
		return x.HeroType
	}
	return 0
}

func (x *HeroData) GetParam() *Param {
	if x != nil {
		return x.Param
	}
	return nil
}

func (x *HeroData) GetTrend() *Param {
	if x != nil {
		return x.Trend
	}
	return nil
}

func (x *HeroData) GetActive() uint32 {
	if x != nil {
		return x.Active
	}
	return 0
}

func (x *HeroData) GetPassive() uint32 {
	if x != nil {
		return x.Passive
	}
	return 0
}

func (x *HeroData) GetLock() HeroData_Lock {
	if x != nil {
		return x.Lock
	}
	return HeroData_NONE
}

func (x *HeroData) GetStockedSkillIds() []uint32 {
	if x != nil {
		return x.StockedSkillIds
	}
	return nil
}

func (x *HeroData) GetAttributeTypes() []uint32 {
	if x != nil {
		return x.AttributeTypes
	}
	return nil
}

func (x *HeroData) GetLockUntil() int64 {
	if x != nil {
		return x.LockUntil
	}
	return 0
}

func (x *HeroData) GetSkills() []uint32 {
	if x != nil {
		return x.Skills
	}
	return nil
}

func (x *HeroData) GetActiveSkill() uint32 {
	if x != nil {
		return x.ActiveSkill
	}
	return 0
}

func (x *HeroData) GetV2SkillInfos() map[uint32]*V2SkillInfo {
	if x != nil {
		return x.V2SkillInfos
	}
	return nil
}

type V2SkillInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SkillId   uint32 `protobuf:"varint,1,opt,name=skill_id,json=skillId,proto3" json:"skill_id,omitempty"`
	Unlocked  bool   `protobuf:"varint,2,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Tentative bool   `protobuf:"varint,3,opt,name=tentative,proto3" json:"tentative,omitempty"`
}

func (x *V2SkillInfo) Reset() {
	*x = V2SkillInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hero_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *V2SkillInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*V2SkillInfo) ProtoMessage() {}

func (x *V2SkillInfo) ProtoReflect() protoreflect.Message {
	mi := &file_hero_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use V2SkillInfo.ProtoReflect.Descriptor instead.
func (*V2SkillInfo) Descriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{3}
}

func (x *V2SkillInfo) GetSkillId() uint32 {
	if x != nil {
		return x.SkillId
	}
	return 0
}

func (x *V2SkillInfo) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *V2SkillInfo) GetTentative() bool {
	if x != nil {
		return x.Tentative
	}
	return false
}

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_hero_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_hero_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_hero_proto_rawDescGZIP(), []int{4}
}

var File_hero_proto protoreflect.FileDescriptor

var file_hero_proto_rawDesc = []byte{
	0x0a, 0x0a, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x68, 0x65,
	0x72, 0x6f, 0x22, 0xe5, 0x02, 0x0a, 0x0e, 0x48, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x4d,
	0x61, 0x73, 0x74, 0x65, 0x72, 0x12, 0x1b, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x05, 0x61, 0x73, 0x73, 0x65, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x61, 0x72, 0x69,
	0x74, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x72, 0x61, 0x72, 0x69, 0x74, 0x79,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x75, 0x70, 0x70, 0x6c, 0x79, 0x12, 0x21, 0x0a, 0x05, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x21, 0x0a, 0x05, 0x74,
	0x72, 0x65, 0x6e, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x65, 0x72,
	0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x12, 0x16,
	0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06,
	0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x65, 0x18, 0x10, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75,
	0x74, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0e, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70, 0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x70,
	0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x5f, 0x76, 0x32, 0x18, 0x12, 0x20, 0x03, 0x28, 0x0d, 0x52,
	0x09, 0x70, 0x61, 0x73, 0x73, 0x69, 0x76, 0x65, 0x56, 0x32, 0x22, 0x4d, 0x0a, 0x05, 0x50, 0x61,
	0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x68, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x02, 0x68, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x70, 0x68, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x70, 0x68, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x69, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x69, 0x6e, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x67, 0x69, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x61, 0x67, 0x69, 0x22, 0xde, 0x04, 0x0a, 0x08, 0x48, 0x65,
	0x72, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x68, 0x65, 0x72, 0x6f, 0x49, 0x64, 0x12,
	0x1b, 0x0a, 0x09, 0x68, 0x65, 0x72, 0x6f, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x08, 0x68, 0x65, 0x72, 0x6f, 0x54, 0x79, 0x70, 0x65, 0x12, 0x21, 0x0a, 0x05,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x68, 0x65,
	0x72, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x12,
	0x21, 0x0a, 0x05, 0x74, 0x72, 0x65, 0x6e, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b,
	0x2e, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x52, 0x05, 0x74, 0x72, 0x65,
	0x6e, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x06, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x61,
	0x73, 0x73, 0x69, 0x76, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x70, 0x61, 0x73,
	0x73, 0x69, 0x76, 0x65, 0x12, 0x27, 0x0a, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x13, 0x2e, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x48, 0x65, 0x72, 0x6f, 0x44, 0x61,
	0x74, 0x61, 0x2e, 0x4c, 0x6f, 0x63, 0x6b, 0x52, 0x04, 0x6c, 0x6f, 0x63, 0x6b, 0x12, 0x2a, 0x0a,
	0x11, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69,
	0x64, 0x73, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0d, 0x52, 0x0f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x65,
	0x64, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x64, 0x73, 0x12, 0x27, 0x0a, 0x0f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x0d, 0x52, 0x0e, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x75, 0x6e, 0x74, 0x69, 0x6c,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x63, 0x6b, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28,
	0x0d, 0x52, 0x06, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x61, 0x63, 0x74,
	0x69, 0x76, 0x65, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0b, 0x61, 0x63, 0x74, 0x69, 0x76, 0x65, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x12, 0x46, 0x0a, 0x0e,
	0x76, 0x32, 0x5f, 0x73, 0x6b, 0x69, 0x6c, 0x6c, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x73, 0x18, 0x0d,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x68, 0x65, 0x72, 0x6f, 0x2e, 0x48, 0x65, 0x72, 0x6f,
	0x44, 0x61, 0x74, 0x61, 0x2e, 0x56, 0x32, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f,
	0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0c, 0x76, 0x32, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x1a, 0x52, 0x0a, 0x11, 0x56, 0x32, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49,
	0x6e, 0x66, 0x6f, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x27, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x68, 0x65, 0x72,
	0x6f, 0x2e, 0x56, 0x32, 0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x30, 0x0a, 0x04, 0x4c, 0x6f, 0x63, 0x6b,
	0x12, 0x08, 0x0a, 0x04, 0x4e, 0x4f, 0x4e, 0x45, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x41, 0x44,
	0x4d, 0x49, 0x4e, 0x10, 0x01, 0x12, 0x08, 0x0a, 0x04, 0x44, 0x45, 0x43, 0x4b, 0x10, 0x02, 0x12,
	0x09, 0x0a, 0x05, 0x54, 0x52, 0x41, 0x44, 0x45, 0x10, 0x03, 0x22, 0x62, 0x0a, 0x0b, 0x56, 0x32,
	0x53, 0x6b, 0x69, 0x6c, 0x6c, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x73, 0x6b, 0x69,
	0x6c, 0x6c, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x75, 0x6e, 0x6c, 0x6f, 0x63, 0x6b, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x74, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x09, 0x74, 0x65, 0x6e, 0x74, 0x61, 0x74, 0x69, 0x76, 0x65, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x68, 0x69, 0x6a, 0x6a, 0x69, 0x72, 0x69, 0x2f, 0x73, 0x69,
	0x6d, 0x75, 0x6c, 0x61, 0x74, 0x6f, 0x72, 0x2f, 0x63, 0x6f, 0x72, 0x65, 0x2f, 0x67, 0x72, 0x70,
	0x63, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x68, 0x65, 0x72, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_hero_proto_rawDescOnce sync.Once
	file_hero_proto_rawDescData = file_hero_proto_rawDesc
)

func file_hero_proto_rawDescGZIP() []byte {
	file_hero_proto_rawDescOnce.Do(func() {
		file_hero_proto_rawDescData = protoimpl.X.CompressGZIP(file_hero_proto_rawDescData)
	})
	return file_hero_proto_rawDescData
}

var file_hero_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_hero_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_hero_proto_goTypes = []interface{}{
	(HeroData_Lock)(0),     // 0: hero.HeroData.Lock
	(*HeroTypeMaster)(nil), // 1: hero.HeroTypeMaster
	(*Param)(nil),          // 2: hero.Param
	(*HeroData)(nil),       // 3: hero.HeroData
	(*V2SkillInfo)(nil),    // 4: hero.V2SkillInfo
	(*Empty)(nil),          // 5: hero.Empty
	nil,                    // 6: hero.HeroData.V2SkillInfosEntry
}
var file_hero_proto_depIdxs = []int32{
	2, // 0: hero.HeroTypeMaster.param:type_name -> hero.Param
	2, // 1: hero.HeroTypeMaster.trend:type_name -> hero.Param
	2, // 2: hero.HeroData.param:type_name -> hero.Param
	2, // 3: hero.HeroData.trend:type_name -> hero.Param
	0, // 4: hero.HeroData.lock:type_name -> hero.HeroData.Lock
	6, // 5: hero.HeroData.v2_skill_infos:type_name -> hero.HeroData.V2SkillInfosEntry
	4, // 6: hero.HeroData.V2SkillInfosEntry.value:type_name -> hero.V2SkillInfo
	7, // [7:7] is the sub-list for method output_type
	7, // [7:7] is the sub-list for method input_type
	7, // [7:7] is the sub-list for extension type_name
	7, // [7:7] is the sub-list for extension extendee
	0, // [0:7] is the sub-list for field type_name
}

func init() { file_hero_proto_init() }
func file_hero_proto_init() {
	if File_hero_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_hero_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroTypeMaster); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hero_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Param); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hero_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HeroData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hero_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*V2SkillInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_hero_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_hero_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_hero_proto_goTypes,
		DependencyIndexes: file_hero_proto_depIdxs,
		EnumInfos:         file_hero_proto_enumTypes,
		MessageInfos:      file_hero_proto_msgTypes,
	}.Build()
	File_hero_proto = out.File
	file_hero_proto_rawDesc = nil
	file_hero_proto_goTypes = nil
	file_hero_proto_depIdxs = nil
}
