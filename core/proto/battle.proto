syntax = "proto3";

package battle;

option go_package = "github.com/hijjiri/simulator/core/grpc-server/battle";

message BattleId {
    uint32 battle_id = 1;
}

message Battle {
    repeated Unit units = 2;
    int32 action_counts = 3;
    Result result = 4;
    enum Result {
        PROGRESS = 0;
        WIN = 1;
        LOSE = 2;
        TIME_UP = 3;
        DRAW = 4;
    }
    State state = 5;
    enum State {
        ACTIVE = 0;
        FIRST_PASSIVE = 1;
        SECOND_PASSIVE = 2;
        OPENING = 3;
    }
    int64 random_seed = 6;
    int64 random_counts = 7;
    repeated BattleAction actions = 8;
    int32 last_active_position = 9;
    repeated uint32 uids = 10;
    int32 attacker_taken_damage = 12;
    int32 defender_taken_damage = 13;
    uint32 battle_type = 14;
    int32 action_limit = 15;
    int32 attacker_change_counts = 17;
    int32 defender_change_counts = 18;
    int32 last_change_action_counts = 19;
    int32 active_action_counts = 23;
}

enum BattleType {
    UNDEFINED_BATTLE    = 0;
    SIMULATE_BATTLE = 1;
}

message BattleAction {
    int32 count = 1;
    repeated CurrentUnit units = 2;
    uint32 skill = 3;
    int32 action_position = 4;
    repeated int32 effect_positions = 5;
    int32 poison = 6;
    int32 bleed = 7;
    int32 active_action_count = 12;
}

message Unit {
    BaseUnit base = 1;
    CurrentUnit current = 2;
}

message BaseUnit {
    int32 index = 1;
    int32 position = 2;
    int32 hp = 3;
    int32 phy = 4;
    int32 int = 5;
    int32 agi = 6;
    repeated uint32 actives = 7;
    uint32 passive = 8;
    uint32 character = 9;
    uint32 extension1 = 10;
    uint32 extension2 = 11;
    string ipfs = 12;
    bool is_enemy = 13;
    map<int32, int32> result_rate1000 = 14;
    enum Result {
        NONE = 0;
        POISON = 1;
        SLEEP = 2;
        CONFUSION = 3;
        RECOVERY = 4;
        MY_DAMAGE = 5;
        YOUR_PHY_DAMAGE = 7;
        YOUR_INT_DAMAGE = 8;
        FEAR = 9;
        BARRIER = 10;
        BLEED = 11;
        STUN = 12;
        DAMAGE_CUT = 13;
        AGI_CHARGE = 14;
        PROSTRATION = 15;
        DECOY = 16;
        CURSE = 17;
        CHARM = 18;
        AURA_ADD_PHY_DAMAGE = 19;
        AURA_ADD_INT_DAMAGE = 20;
        AURA_RECEIVE_PHY_DAMAGE = 21;
        AURA_RECEIVE_INT_DAMAGE = 22;
    }
    repeated uint32 attribute_types = 15;
    uint32 hero_type = 16;
    repeated AuraEffectRate auras = 17;
    message AuraEffectRate {
        uint32 aura_type = 1;
        int32 effect_value = 2;
        int32 secondary_value = 3;
    }
    int32 critical_phy_rate = 18;
    int32 critical_int_rate = 19;
    int32 increase_damage_cut = 20;
    repeated EnchantInfo enchant_infos = 21;
}

message CurrentUnit {
    int32 index = 1;
    int32 position = 2;
    int32 hp = 3;
    int32 phy = 4;
    int32 int = 5;
    int32 agi = 6;
    int32 charge = 7;
    int32 active_counts = 8;
    bool passive_enabled = 9;
    int32 added_damage = 10;
    int32 taken_damage = 11;
    State state = 12;
    enum State {
        NORMAL      = 0;
        POISON      = 1;
        SLEEP       = 2;
        CONFUSION   = 3;
        FEAR        = 4;
        BARRIER       = 5;
        BLEED = 6;
        STUN = 7;
        PROSTRATION = 8;
        CURSE = 9;
        CHARM = 10;
    }
    bool position_changed = 13;
    bool barrier_in_action = 14;
    int32 bleed_count = 15;
    bool resurrection_enabled = 16;
    bool decoy_enabled = 17;
    bool decoy_in_action = 18;
    int32 bonus_charge = 19;
    int32 curse_count = 20;
    bool skill_death_enabled = 21;
    bool duplicate_decoy_enabled = 22;
    int32 critical_phy_rate = 23;
    int32 critical_int_rate = 24;
    bool critical_judg = 25;
    int32 shield = 26;
    map<uint32, bool> aura_enabled = 27;
    bool aura_death_enabled = 28;
    map<int32, int32> state_effect_rate = 29;
    repeated uint32 active_auras = 30;
    int32 increase_damage_cut = 31;
    repeated Unit last_targets = 32;
    map<uint32, int32> within_action_value = 33;
    int32 passive_added_damage = 34;
    int32 passive_taken_damage = 35;
    repeated EnchantInfo enchant_infos = 36;
}

message EnchantInfo {
    Enchant enchant_type = 1;
    enum Enchant {
        NO_ENCHANT = 0;
        REDUCTION = 1;
    }
    int32 rate = 2;
}
