{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for example\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v4.23.4\n// source: example.proto\n\n/* eslint-disable */\n// @ts-nocheck\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.example = require('./example_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.example.ExampleServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.example.ExampleServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n};\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.example.HelloRequest,\n *   !proto.example.HelloResponse>}\n */\nconst methodDescriptor_ExampleService_SayHello = new grpc.web.MethodDescriptor('/example.ExampleService/SayHello', grpc.web.MethodType.UNARY, proto.example.HelloRequest, proto.example.HelloResponse,\n/**\n * @param {!proto.example.HelloRequest} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.example.HelloResponse.deserializeBinary);\n\n/**\n * @param {!proto.example.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.example.HelloResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.example.HelloResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.example.ExampleServiceClient.prototype.sayHello = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/example.ExampleService/SayHello', request, metadata || {}, methodDescriptor_ExampleService_SayHello, callback);\n};\n\n/**\n * @param {!proto.example.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.example.HelloResponse>}\n *     Promise that resolves to the response\n */\nproto.example.ExampleServicePromiseClient.prototype.sayHello = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/example.ExampleService/SayHello', request, metadata || {}, methodDescriptor_ExampleService_SayHello);\n};\nmodule.exports = proto.example;","map":{"version":3,"names":["grpc","web","require","proto","example","ExampleServiceClient","hostname","credentials","options","format","client_","GrpcWebClientBase","hostname_","replace","ExampleServicePromiseClient","methodDescriptor_ExampleService_SayHello","MethodDescriptor","MethodType","UNARY","HelloRequest","HelloResponse","request","serializeBinary","deserializeBinary","prototype","sayHello","metadata","callback","rpcCall","unaryCall","module","exports"],"sources":["/Users/saitoshosuke/go/src/github.com/hijjiri/web/src/_proto/example_grpc_web_pb.js"],"sourcesContent":["/**\n * @fileoverview gRPC-Web generated client stub for example\n * @enhanceable\n * @public\n */\n\n// Code generated by protoc-gen-grpc-web. DO NOT EDIT.\n// versions:\n// \tprotoc-gen-grpc-web v1.4.2\n// \tprotoc              v4.23.4\n// source: example.proto\n\n\n/* eslint-disable */\n// @ts-nocheck\n\n\n\nconst grpc = {};\ngrpc.web = require('grpc-web');\n\nconst proto = {};\nproto.example = require('./example_pb.js');\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.example.ExampleServiceClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\nproto.example.ExampleServicePromiseClient =\n    function(hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n\n  /**\n   * @private @const {string} The hostname\n   */\n  this.hostname_ = hostname.replace(/\\/+$/, '');\n\n};\n\n\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.example.HelloRequest,\n *   !proto.example.HelloResponse>}\n */\nconst methodDescriptor_ExampleService_SayHello = new grpc.web.MethodDescriptor(\n  '/example.ExampleService/SayHello',\n  grpc.web.MethodType.UNARY,\n  proto.example.HelloRequest,\n  proto.example.HelloResponse,\n  /**\n   * @param {!proto.example.HelloRequest} request\n   * @return {!Uint8Array}\n   */\n  function(request) {\n    return request.serializeBinary();\n  },\n  proto.example.HelloResponse.deserializeBinary\n);\n\n\n/**\n * @param {!proto.example.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.example.HelloResponse)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.example.HelloResponse>|undefined}\n *     The XHR Node Readable Stream\n */\nproto.example.ExampleServiceClient.prototype.sayHello =\n    function(request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ +\n      '/example.ExampleService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_ExampleService_SayHello,\n      callback);\n};\n\n\n/**\n * @param {!proto.example.HelloRequest} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.example.HelloResponse>}\n *     Promise that resolves to the response\n */\nproto.example.ExampleServicePromiseClient.prototype.sayHello =\n    function(request, metadata) {\n  return this.client_.unaryCall(this.hostname_ +\n      '/example.ExampleService/SayHello',\n      request,\n      metadata || {},\n      methodDescriptor_ExampleService_SayHello);\n};\n\n\nmodule.exports = proto.example;\n\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAGA;AACA;;AAIA,MAAMA,IAAI,GAAG,CAAC,CAAC;AACfA,IAAI,CAACC,GAAG,GAAGC,OAAO,CAAC,UAAU,CAAC;AAE9B,MAAMC,KAAK,GAAG,CAAC,CAAC;AAChBA,KAAK,CAACC,OAAO,GAAGF,OAAO,CAAC,iBAAiB,CAAC;;AAE1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAC,KAAK,CAACC,OAAO,CAACC,oBAAoB,GAC9B,UAASC,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3C,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;EAC1BA,OAAO,CAACC,MAAM,GAAG,MAAM;;EAEvB;AACF;AACA;EACE,IAAI,CAACC,OAAO,GAAG,IAAIV,IAAI,CAACC,GAAG,CAACU,iBAAiB,CAACH,OAAO,CAAC;;EAEtD;AACF;AACA;EACE,IAAI,CAACI,SAAS,GAAGN,QAAQ,CAACO,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAE/C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAV,KAAK,CAACC,OAAO,CAACU,2BAA2B,GACrC,UAASR,QAAQ,EAAEC,WAAW,EAAEC,OAAO,EAAE;EAC3C,IAAI,CAACA,OAAO,EAAEA,OAAO,GAAG,CAAC,CAAC;EAC1BA,OAAO,CAACC,MAAM,GAAG,MAAM;;EAEvB;AACF;AACA;EACE,IAAI,CAACC,OAAO,GAAG,IAAIV,IAAI,CAACC,GAAG,CAACU,iBAAiB,CAACH,OAAO,CAAC;;EAEtD;AACF;AACA;EACE,IAAI,CAACI,SAAS,GAAGN,QAAQ,CAACO,OAAO,CAAC,MAAM,EAAE,EAAE,CAAC;AAE/C,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,MAAME,wCAAwC,GAAG,IAAIf,IAAI,CAACC,GAAG,CAACe,gBAAgB,CAC5E,kCAAkC,EAClChB,IAAI,CAACC,GAAG,CAACgB,UAAU,CAACC,KAAK,EACzBf,KAAK,CAACC,OAAO,CAACe,YAAY,EAC1BhB,KAAK,CAACC,OAAO,CAACgB,aAAa;AAC3B;AACF;AACA;AACA;AACE,UAASC,OAAO,EAAE;EAChB,OAAOA,OAAO,CAACC,eAAe,CAAC,CAAC;AAClC,CAAC,EACDnB,KAAK,CAACC,OAAO,CAACgB,aAAa,CAACG,iBAC9B,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACApB,KAAK,CAACC,OAAO,CAACC,oBAAoB,CAACmB,SAAS,CAACC,QAAQ,GACjD,UAASJ,OAAO,EAAEK,QAAQ,EAAEC,QAAQ,EAAE;EACxC,OAAO,IAAI,CAACjB,OAAO,CAACkB,OAAO,CAAC,IAAI,CAAChB,SAAS,GACtC,kCAAkC,EAClCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdX,wCAAwC,EACxCY,QAAQ,CAAC;AACf,CAAC;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAxB,KAAK,CAACC,OAAO,CAACU,2BAA2B,CAACU,SAAS,CAACC,QAAQ,GACxD,UAASJ,OAAO,EAAEK,QAAQ,EAAE;EAC9B,OAAO,IAAI,CAAChB,OAAO,CAACmB,SAAS,CAAC,IAAI,CAACjB,SAAS,GACxC,kCAAkC,EAClCS,OAAO,EACPK,QAAQ,IAAI,CAAC,CAAC,EACdX,wCAAwC,CAAC;AAC/C,CAAC;AAGDe,MAAM,CAACC,OAAO,GAAG5B,KAAK,CAACC,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}