{"ast":null,"code":"var _jsxFileName = \"/Users/saitoshosuke/go/src/github.com/hijjiri/web/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ExampleServiceClient } from './_proto/example_grpc_web_pb';\nimport { HelloRequest } from './_proto/example_pb';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst client = new ExampleServiceClient('http://localhost:8080');\nfunction App() {\n  _s();\n  const [message, setMessage] = useState('');\n  const sayHello = () => {\n    const request = new HelloRequest();\n    request.setName('world');\n    client.sayHello(request, {}, (err, response) => {\n      if (err) {\n        console.error(err);\n      } else {\n        setMessage(response.getMessage());\n      }\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: sayHello,\n        children: \"Say Hello\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"l8KXAebGu4sZHsyCIQX7P8si41w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","ExampleServiceClient","HelloRequest","jsxDEV","_jsxDEV","client","App","_s","message","setMessage","sayHello","request","setName","err","response","console","error","getMessage","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/saitoshosuke/go/src/github.com/hijjiri/web/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { ExampleServiceClient } from './_proto/example_grpc_web_pb';\nimport { HelloRequest } from './_proto/example_pb';\n\nconst client = new ExampleServiceClient('http://localhost:8080');\n\nfunction App() {\n  const [message, setMessage] = useState('');\n\n  const sayHello = () => {\n    const request = new HelloRequest();\n    request.setName('world');\n\n    client.sayHello(request, {}, (err, response) => {\n      if (err) {\n        console.error(err);\n      } else {\n        setMessage(response.getMessage());\n      }\n    });\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <button onClick={sayHello}>Say Hello</button>\n        <p>{message}</p>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,oBAAoB,QAAQ,8BAA8B;AACnE,SAASC,YAAY,QAAQ,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,MAAM,GAAG,IAAIJ,oBAAoB,CAAC,uBAAuB,CAAC;AAEhE,SAASK,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMU,QAAQ,GAAGA,CAAA,KAAM;IACrB,MAAMC,OAAO,GAAG,IAAIT,YAAY,CAAC,CAAC;IAClCS,OAAO,CAACC,OAAO,CAAC,OAAO,CAAC;IAExBP,MAAM,CAACK,QAAQ,CAACC,OAAO,EAAE,CAAC,CAAC,EAAE,CAACE,GAAG,EAAEC,QAAQ,KAAK;MAC9C,IAAID,GAAG,EAAE;QACPE,OAAO,CAACC,KAAK,CAACH,GAAG,CAAC;MACpB,CAAC,MAAM;QACLJ,UAAU,CAACK,QAAQ,CAACG,UAAU,CAAC,CAAC,CAAC;MACnC;IACF,CAAC,CAAC;EACJ,CAAC;EAED,oBACEb,OAAA;IAAKc,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBf,OAAA;MAAQc,SAAS,EAAC,YAAY;MAAAC,QAAA,gBAC5Bf,OAAA;QAAQgB,OAAO,EAAEV,QAAS;QAAAS,QAAA,EAAC;MAAS;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAC7CpB,OAAA;QAAAe,QAAA,EAAIX;MAAO;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV;AAACjB,EAAA,CAxBQD,GAAG;AAAAmB,EAAA,GAAHnB,GAAG;AA0BZ,eAAeA,GAAG;AAAC,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}